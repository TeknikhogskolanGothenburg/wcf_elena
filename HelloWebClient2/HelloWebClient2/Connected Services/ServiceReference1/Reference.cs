//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HelloWebClient2.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/CarRentalServiceDL")]
    [System.SerializableAttribute()]
    public partial class Car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegnumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regnumber {
            get {
                return this.RegnumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RegnumberField, value) != true)) {
                    this.RegnumberField = value;
                    this.RaisePropertyChanged("Regnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReservationInfo", Namespace="http://schemas.datacontract.org/2004/07/CarRentalServiceDL")]
    [System.SerializableAttribute()]
    public partial class ReservationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegnumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Regnumber {
            get {
                return this.RegnumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RegnumberField, value) != true)) {
                    this.RegnumberField = value;
                    this.RaisePropertyChanged("Regnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Year {
            get {
                return this.YearField;
            }
            set {
                if ((this.YearField.Equals(value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IHelloService")]
    public interface IHelloService {
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/IHelloService/GetCarById", ReplyAction="http://tempuri.org/IHelloService/GetCarByIdResponse")]
        HelloWebClient2.ServiceReference1.Car GetCarById(int id);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.None, Action="http://tempuri.org/IHelloService/GetCarById", ReplyAction="http://tempuri.org/IHelloService/GetCarByIdResponse")]
        System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.Car> GetCarByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IHelloService/GetCarByReg", ReplyAction="http://tempuri.org/IHelloService/GetCarByRegResponse")]
        HelloWebClient2.ServiceReference1.Car GetCarByReg(string name);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IHelloService/GetCarByReg", ReplyAction="http://tempuri.org/IHelloService/GetCarByRegResponse")]
        System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.Car> GetCarByRegAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/GetCarByString", ReplyAction="http://tempuri.org/IHelloService/GetCarByStringResponse")]
        HelloWebClient2.ServiceReference1.Car GetCarByString(string option, string term);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/GetCarByString", ReplyAction="http://tempuri.org/IHelloService/GetCarByStringResponse")]
        System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.Car> GetCarByStringAsync(string option, string term);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/GetCustomer", ReplyAction="http://tempuri.org/IHelloService/GetCustomerResponse")]
        HelloWebClient2.ServiceReference1.CustomerInfo GetCustomer(HelloWebClient2.ServiceReference1.CustomerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/GetCustomer", ReplyAction="http://tempuri.org/IHelloService/GetCustomerResponse")]
        System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.CustomerInfo> GetCustomerAsync(HelloWebClient2.ServiceReference1.CustomerRequest request);
        
        // CODEGEN: Generating message contract since the operation SaveCustomer is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/SaveCustomer", ReplyAction="http://tempuri.org/IHelloService/SaveCustomerResponse")]
        HelloWebClient2.ServiceReference1.SaveCustomerResponse SaveCustomer(HelloWebClient2.ServiceReference1.CustomerInfo request);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/SaveCustomer", ReplyAction="http://tempuri.org/IHelloService/SaveCustomerResponse")]
        System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.SaveCustomerResponse> SaveCustomerAsync(HelloWebClient2.ServiceReference1.CustomerInfo request);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/GetReservationByBrand", ReplyAction="http://tempuri.org/IHelloService/GetReservationByBrandResponse")]
        HelloWebClient2.ServiceReference1.ReservationInfo1 GetReservationByBrand(HelloWebClient2.ServiceReference1.ReservationRequestByBrand request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/GetReservationByBrand", ReplyAction="http://tempuri.org/IHelloService/GetReservationByBrandResponse")]
        System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.ReservationInfo1> GetReservationByBrandAsync(HelloWebClient2.ServiceReference1.ReservationRequestByBrand request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://arthead.se/Reservation) of message ReservationRequestByDate does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/GetReservationByDate", ReplyAction="http://tempuri.org/IHelloService/GetReservationByDateResponse")]
        HelloWebClient2.ServiceReference1.ListReservationsInfo GetReservationByDate(HelloWebClient2.ServiceReference1.ReservationRequestByDate request);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/GetReservationByDate", ReplyAction="http://tempuri.org/IHelloService/GetReservationByDateResponse")]
        System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.ListReservationsInfo> GetReservationByDateAsync(HelloWebClient2.ServiceReference1.ReservationRequestByDate request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://arthead.se/Reservation) of message ReservationRequestByDate does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/GetAvailableCars", ReplyAction="http://tempuri.org/IHelloService/GetAvailableCarsResponse")]
        HelloWebClient2.ServiceReference1.ListReservationsInfo GetAvailableCars(HelloWebClient2.ServiceReference1.ReservationRequestByDate request);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/GetAvailableCars", ReplyAction="http://tempuri.org/IHelloService/GetAvailableCarsResponse")]
        System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.ListReservationsInfo> GetAvailableCarsAsync(HelloWebClient2.ServiceReference1.ReservationRequestByDate request);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/DeleteCar", ReplyAction="http://tempuri.org/IHelloService/DeleteCarResponse")]
        void DeleteCar(string regnum);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/DeleteCar", ReplyAction="http://tempuri.org/IHelloService/DeleteCarResponse")]
        System.Threading.Tasks.Task DeleteCarAsync(string regnum);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/DeleteCustomer", ReplyAction="http://tempuri.org/IHelloService/DeleteCustomerResponse")]
        void DeleteCustomer(string option, string name);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IHelloService/DeleteCustomer", ReplyAction="http://tempuri.org/IHelloService/DeleteCustomerResponse")]
        System.Threading.Tasks.Task DeleteCustomerAsync(string option, string name);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CustomerRequestObject", WrapperNamespace="http://arthead.se/Customer", IsWrapped=true)]
    public partial class CustomerRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://arthead.se/Customer")]
        public string LicenseKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Customer", Order=0)]
        public string CustomerLastName;
        
        public CustomerRequest() {
        }
        
        public CustomerRequest(string LicenseKey, string CustomerLastName) {
            this.LicenseKey = LicenseKey;
            this.CustomerLastName = CustomerLastName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CustomerInfoObject", WrapperNamespace="http://arthead.se/Customer", IsWrapped=true)]
    public partial class CustomerInfo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Customer", Order=0)]
        public int Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Customer", Order=1)]
        public string FirstName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Customer", Order=2)]
        public string LastName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Customer", Order=3)]
        public string Phone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Customer", Order=4)]
        public string Email;
        
        public CustomerInfo() {
        }
        
        public CustomerInfo(int Id, string FirstName, string LastName, string Phone, string Email) {
            this.Id = Id;
            this.FirstName = FirstName;
            this.LastName = LastName;
            this.Phone = Phone;
            this.Email = Email;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SaveCustomerResponse {
        
        public SaveCustomerResponse() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReservationRequestBrandObject", WrapperNamespace="http://arthead.se/Reservation", IsWrapped=true)]
    public partial class ReservationRequestByBrand {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://arthead.se/Reservation")]
        public string LicenseKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Reservation", Order=0)]
        public string CarBrand;
        
        public ReservationRequestByBrand() {
        }
        
        public ReservationRequestByBrand(string LicenseKey, string CarBrand) {
            this.LicenseKey = LicenseKey;
            this.CarBrand = CarBrand;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReservationInfoObject", WrapperNamespace="http://arthead.se/Reservation", IsWrapped=true)]
    public partial class ReservationInfo1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Reservation", Order=0)]
        public int Id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Reservation", Order=1)]
        public string Brand;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Reservation", Order=2)]
        public string Model;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Reservation", Order=3)]
        public string Regnumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Reservation", Order=4)]
        public int Year;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Reservation", Order=5)]
        public System.DateTime StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Reservation", Order=6)]
        public System.DateTime EndDate;
        
        public ReservationInfo1() {
        }
        
        public ReservationInfo1(int Id, string Brand, string Model, string Regnumber, int Year, System.DateTime StartDate, System.DateTime EndDate) {
            this.Id = Id;
            this.Brand = Brand;
            this.Model = Model;
            this.Regnumber = Regnumber;
            this.Year = Year;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReservationRequestDateObject", WrapperNamespace="http://arthead.se/Reservation", IsWrapped=true)]
    public partial class ReservationRequestByDate {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://arthead.se/Reservation")]
        public string LicenseKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Reservation", Order=0)]
        public string Enddate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Reservation", Order=1)]
        public string Startdate;
        
        public ReservationRequestByDate() {
        }
        
        public ReservationRequestByDate(string LicenseKey, string Enddate, string Startdate) {
            this.LicenseKey = LicenseKey;
            this.Enddate = Enddate;
            this.Startdate = Startdate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListReservationsInfoObject", WrapperNamespace="http://arthead.se/Reservation", IsWrapped=true)]
    public partial class ListReservationsInfo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://arthead.se/Reservation", Order=0)]
        public System.Collections.Generic.List<HelloWebClient2.ServiceReference1.ReservationInfo> ReservationCollection;
        
        public ListReservationsInfo() {
        }
        
        public ListReservationsInfo(System.Collections.Generic.List<HelloWebClient2.ServiceReference1.ReservationInfo> ReservationCollection) {
            this.ReservationCollection = ReservationCollection;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHelloServiceChannel : HelloWebClient2.ServiceReference1.IHelloService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloServiceClient : System.ServiceModel.ClientBase<HelloWebClient2.ServiceReference1.IHelloService>, HelloWebClient2.ServiceReference1.IHelloService {
        
        public HelloServiceClient() {
        }
        
        public HelloServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HelloServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HelloWebClient2.ServiceReference1.Car GetCarById(int id) {
            return base.Channel.GetCarById(id);
        }
        
        public System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.Car> GetCarByIdAsync(int id) {
            return base.Channel.GetCarByIdAsync(id);
        }
        
        public HelloWebClient2.ServiceReference1.Car GetCarByReg(string name) {
            return base.Channel.GetCarByReg(name);
        }
        
        public System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.Car> GetCarByRegAsync(string name) {
            return base.Channel.GetCarByRegAsync(name);
        }
        
        public HelloWebClient2.ServiceReference1.Car GetCarByString(string option, string term) {
            return base.Channel.GetCarByString(option, term);
        }
        
        public System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.Car> GetCarByStringAsync(string option, string term) {
            return base.Channel.GetCarByStringAsync(option, term);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HelloWebClient2.ServiceReference1.CustomerInfo HelloWebClient2.ServiceReference1.IHelloService.GetCustomer(HelloWebClient2.ServiceReference1.CustomerRequest request) {
            return base.Channel.GetCustomer(request);
        }
        
        public int GetCustomer(string LicenseKey, string CustomerLastName, out string FirstName, out string LastName, out string Phone, out string Email) {
            HelloWebClient2.ServiceReference1.CustomerRequest inValue = new HelloWebClient2.ServiceReference1.CustomerRequest();
            inValue.LicenseKey = LicenseKey;
            inValue.CustomerLastName = CustomerLastName;
            HelloWebClient2.ServiceReference1.CustomerInfo retVal = ((HelloWebClient2.ServiceReference1.IHelloService)(this)).GetCustomer(inValue);
            FirstName = retVal.FirstName;
            LastName = retVal.LastName;
            Phone = retVal.Phone;
            Email = retVal.Email;
            return retVal.Id;
        }
        
        public System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.CustomerInfo> GetCustomerAsync(HelloWebClient2.ServiceReference1.CustomerRequest request) {
            return base.Channel.GetCustomerAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HelloWebClient2.ServiceReference1.SaveCustomerResponse HelloWebClient2.ServiceReference1.IHelloService.SaveCustomer(HelloWebClient2.ServiceReference1.CustomerInfo request) {
            return base.Channel.SaveCustomer(request);
        }
        
        public void SaveCustomer(int Id, string FirstName, string LastName, string Phone, string Email) {
            HelloWebClient2.ServiceReference1.CustomerInfo inValue = new HelloWebClient2.ServiceReference1.CustomerInfo();
            inValue.Id = Id;
            inValue.FirstName = FirstName;
            inValue.LastName = LastName;
            inValue.Phone = Phone;
            inValue.Email = Email;
            HelloWebClient2.ServiceReference1.SaveCustomerResponse retVal = ((HelloWebClient2.ServiceReference1.IHelloService)(this)).SaveCustomer(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.SaveCustomerResponse> HelloWebClient2.ServiceReference1.IHelloService.SaveCustomerAsync(HelloWebClient2.ServiceReference1.CustomerInfo request) {
            return base.Channel.SaveCustomerAsync(request);
        }
        
        public System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.SaveCustomerResponse> SaveCustomerAsync(int Id, string FirstName, string LastName, string Phone, string Email) {
            HelloWebClient2.ServiceReference1.CustomerInfo inValue = new HelloWebClient2.ServiceReference1.CustomerInfo();
            inValue.Id = Id;
            inValue.FirstName = FirstName;
            inValue.LastName = LastName;
            inValue.Phone = Phone;
            inValue.Email = Email;
            return ((HelloWebClient2.ServiceReference1.IHelloService)(this)).SaveCustomerAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HelloWebClient2.ServiceReference1.ReservationInfo1 HelloWebClient2.ServiceReference1.IHelloService.GetReservationByBrand(HelloWebClient2.ServiceReference1.ReservationRequestByBrand request) {
            return base.Channel.GetReservationByBrand(request);
        }
        
        public int GetReservationByBrand(string LicenseKey, string CarBrand, out string Brand, out string Model, out string Regnumber, out int Year, out System.DateTime StartDate, out System.DateTime EndDate) {
            HelloWebClient2.ServiceReference1.ReservationRequestByBrand inValue = new HelloWebClient2.ServiceReference1.ReservationRequestByBrand();
            inValue.LicenseKey = LicenseKey;
            inValue.CarBrand = CarBrand;
            HelloWebClient2.ServiceReference1.ReservationInfo1 retVal = ((HelloWebClient2.ServiceReference1.IHelloService)(this)).GetReservationByBrand(inValue);
            Brand = retVal.Brand;
            Model = retVal.Model;
            Regnumber = retVal.Regnumber;
            Year = retVal.Year;
            StartDate = retVal.StartDate;
            EndDate = retVal.EndDate;
            return retVal.Id;
        }
        
        public System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.ReservationInfo1> GetReservationByBrandAsync(HelloWebClient2.ServiceReference1.ReservationRequestByBrand request) {
            return base.Channel.GetReservationByBrandAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HelloWebClient2.ServiceReference1.ListReservationsInfo HelloWebClient2.ServiceReference1.IHelloService.GetReservationByDate(HelloWebClient2.ServiceReference1.ReservationRequestByDate request) {
            return base.Channel.GetReservationByDate(request);
        }
        
        public System.Collections.Generic.List<HelloWebClient2.ServiceReference1.ReservationInfo> GetReservationByDate(string LicenseKey, string Enddate, string Startdate) {
            HelloWebClient2.ServiceReference1.ReservationRequestByDate inValue = new HelloWebClient2.ServiceReference1.ReservationRequestByDate();
            inValue.LicenseKey = LicenseKey;
            inValue.Enddate = Enddate;
            inValue.Startdate = Startdate;
            HelloWebClient2.ServiceReference1.ListReservationsInfo retVal = ((HelloWebClient2.ServiceReference1.IHelloService)(this)).GetReservationByDate(inValue);
            return retVal.ReservationCollection;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.ListReservationsInfo> HelloWebClient2.ServiceReference1.IHelloService.GetReservationByDateAsync(HelloWebClient2.ServiceReference1.ReservationRequestByDate request) {
            return base.Channel.GetReservationByDateAsync(request);
        }
        
        public System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.ListReservationsInfo> GetReservationByDateAsync(string LicenseKey, string Enddate, string Startdate) {
            HelloWebClient2.ServiceReference1.ReservationRequestByDate inValue = new HelloWebClient2.ServiceReference1.ReservationRequestByDate();
            inValue.LicenseKey = LicenseKey;
            inValue.Enddate = Enddate;
            inValue.Startdate = Startdate;
            return ((HelloWebClient2.ServiceReference1.IHelloService)(this)).GetReservationByDateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        HelloWebClient2.ServiceReference1.ListReservationsInfo HelloWebClient2.ServiceReference1.IHelloService.GetAvailableCars(HelloWebClient2.ServiceReference1.ReservationRequestByDate request) {
            return base.Channel.GetAvailableCars(request);
        }
        
        public System.Collections.Generic.List<HelloWebClient2.ServiceReference1.ReservationInfo> GetAvailableCars(string LicenseKey, string Enddate, string Startdate) {
            HelloWebClient2.ServiceReference1.ReservationRequestByDate inValue = new HelloWebClient2.ServiceReference1.ReservationRequestByDate();
            inValue.LicenseKey = LicenseKey;
            inValue.Enddate = Enddate;
            inValue.Startdate = Startdate;
            HelloWebClient2.ServiceReference1.ListReservationsInfo retVal = ((HelloWebClient2.ServiceReference1.IHelloService)(this)).GetAvailableCars(inValue);
            return retVal.ReservationCollection;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.ListReservationsInfo> HelloWebClient2.ServiceReference1.IHelloService.GetAvailableCarsAsync(HelloWebClient2.ServiceReference1.ReservationRequestByDate request) {
            return base.Channel.GetAvailableCarsAsync(request);
        }
        
        public System.Threading.Tasks.Task<HelloWebClient2.ServiceReference1.ListReservationsInfo> GetAvailableCarsAsync(string LicenseKey, string Enddate, string Startdate) {
            HelloWebClient2.ServiceReference1.ReservationRequestByDate inValue = new HelloWebClient2.ServiceReference1.ReservationRequestByDate();
            inValue.LicenseKey = LicenseKey;
            inValue.Enddate = Enddate;
            inValue.Startdate = Startdate;
            return ((HelloWebClient2.ServiceReference1.IHelloService)(this)).GetAvailableCarsAsync(inValue);
        }
        
        public void DeleteCar(string regnum) {
            base.Channel.DeleteCar(regnum);
        }
        
        public System.Threading.Tasks.Task DeleteCarAsync(string regnum) {
            return base.Channel.DeleteCarAsync(regnum);
        }
        
        public void DeleteCustomer(string option, string name) {
            base.Channel.DeleteCustomer(option, name);
        }
        
        public System.Threading.Tasks.Task DeleteCustomerAsync(string option, string name) {
            return base.Channel.DeleteCustomerAsync(option, name);
        }
    }
}
